name: "[My node js app] Build and deploy"

on:
  push:
    branches:
      - "main"
    paths:
      - '../../../mynodejsapp/**'
      - '.github/workflows/mynodejsapp-build-and-deploy.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build app
    outputs:
      image_name: ${{ steps.export.outputs.image_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set image tag and build image
        id: export
        run: |
          IMAGE_TAG=shohabbos7/java-application:latest
          echo "image_name=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker build -t $IMAGE_TAG -f Dockerfile.production .
          docker push $IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    name: Deploy app
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_REMOTE_PORT }} ${{ secrets.SSH_REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose file to server
        run: |
          scp -P ${{ secrets.SSH_REMOTE_PORT }} ./mynodejsapp/deploy/docker-compose.yaml ${{ secrets.SSH_REMOTE_USER }}@${{ secrets.SSH_REMOTE_HOST }}:/opt/mynodejsapp/

      - name: Update image tag and restart app on server
        run: |
          ssh -p ${{ secrets.SSH_REMOTE_PORT }} ${{ secrets.SSH_REMOTE_USER }}@${{ secrets.SSH_REMOTE_HOST }} <<EOF
            cd /opt/mynodejsapp
            yq -i '.services.web.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml
            docker compose up -d --remove-orphans
          EOF
